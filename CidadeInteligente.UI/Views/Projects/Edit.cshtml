@using CidadeInteligente.Application.ViewModels
@model ProjectDetailsViewModel;

@{
    this.ViewData["Title"] = $"Editar Projeto - {this.Model.ProjectId}";
}

<link rel="stylesheet" href="~/css/header.css" />
<link rel="stylesheet" href="~/css/form.css" />

<style>
    .users {
        overflow-y: scroll;
        height: 215px;
        border: 1px solid #ccc;
    }

    .user {
        margin: 6px;
        padding: 5px 10px;
        background-color: rgb(214, 214, 214);
        cursor: pointer;
        filter: opacity(0.75);
    }

    .user[involved="true"] {
        background-color: #b11116;
        -moz-box-sizing: border-box;
        color: #fff;
        filter: drop-shadow(0px 0px 2px black);
    }

    .conteudo {
        background: #c5c5c55e !important;
        width: 70%;
        margin-left: auto;
        margin-right: auto;
        margin-top: 0;
    }

    .form-control {
        color: rgb(57, 87, 88);
    }

    .form-control option {
        background: rgb(228, 228, 228);
    }

    .btn-add-media {
        background: rgb(80, 80, 80);
        color: white;
    }

    .btn-add-media:hover {
        background: rgb(51, 51, 51);
        color: white;
    }

    .title_criar {
        background: #b11116;
        color: white;
        width: 70%;
        margin-bottom: 0;
        margin-left: auto;
        margin-right: auto;
        padding: 20px;
        margin-top: 5em;
        box-shadow: 0 6px 6px rgba(92, 92, 92, 0.4);
    }

    .title_criar hr {
        background: rgb(255, 255, 255);
        text-align: center;
    }

    .form-input {
        padding-left: 40px;
        width: 100%;
        line-height: 1.2;
        height: 60px;
        outline: none;
        border: none;
        background: none;
        border-bottom: solid 1px rgb(57, 87, 88);
        color: rgb(57, 87, 88);
    }

    .form-input:focus {
        padding-left: 40px;
        width: 100%;
        line-height: 1.2;
        height: 40px;
        outline: none;
        border: none;
        background: none;
        border-bottom: solid 1px rgb(255, 255, 255);
        color: rgb(255, 255, 255);
    }

    .form-input::placeholder {
        color: rgb(57, 87, 88);
    }

    .inputIcon {
        position: relative;
    }

    .inputIcon i {
        position: absolute;
        left: 0;
        top: 0px;
        padding: 9px 8px;
        color: rgb(57, 87, 88);
        transition: .3s;
    }

    .card-body {
        width: 100%;
    }

    .inputIcon input:focus+i {
        color: rgb(255, 255, 255);
    }

    .inputIcon.inputIconBg i {
        background-color: #aaa;
        color: #fff;
        padding: 9px 4px;
        border-radius: 4px 0 0 0 4px;
    }

    label {
        color: #b11116;
    }

    .navbar-toggler {
        background: #b11116;
    }

    .mdi-menu {
        color: aliceblue;
        font-size: 24px;
    }

    @@media screen and (max-width: 600px) {
        .title_criar {
            width: 97%;
            margin-top: 2em;
        }
        .conteudo {
            width: 100%;
        }
        h3 {
            font-size: 1.5em;
        }
    }
</style>

<partial name="_Header" />

<main class="p-3">
    <div class="container-fluid d-flex justify-content-center align-items-center flex-column p-0">
        <div class="formTitle">
            <h3 class="m-0 p-2 text-center">Editar Projeto</h3>
        </div>
        <div class="formContent">
            <form class="form">
                <input type="hidden" name="projectId" value=@this.Model.ProjectId>
                <div class="row justify-content-center">
                    <div class="col-12 col-md-12 input-form-title">
                        <div class="form-group">
                            <label>Título</label>
                            <input value="@this.Model.Title" type="text" maxlength="100" name="title" class="form-control" placeholder="Digite o titulo">
                        </div>
                    </div>
                </div>
                <div class="row justify-content-center">
                    <div class="col-12 col-sm-8 col-lg-8 col-md-8 d-flex justify-content-center align-items-center">
                        <div class="row">
                            <div class="col-12 col-lg-6">
                                <div class="form-group">
                                    <label>Área do projeto</label>
                                    <select class="form-control" name="areaId">
                                        @foreach (AreaViewModel area in this.ViewBag.Areas) {
                                            <option selected="@(this.Model.AreaId == area.AreaId)" value=@area.AreaId>@area.Description</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-12 col-lg-6">
                                <div class="form-group">
                                    <label for="my-select">Curso do projeto</label>
                                    <select id="my-select" class="form-control" name="courseId">
                                        @foreach (CourseViewModel course in this.ViewBag.Courses) {
                                            <option selected="@(this.Model.CourseId == course.CourseId)" value=@course.CourseId>@course.Description</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-12 col-lg-6">
                                <div class="form-group">
                                    <label>Data de ínicio do projeto</label>
                                    <input class="form-control" value=@string.Join('-', this.Model.StartedAt.ToString().Split('/').Reverse()) type="date" name="startedAt">
                                </div>
                            </div>
                            <div class="col-12 col-lg-6">
                                <div class="form-group">
                                    <label>Data de término do projeto</label>
                                    <input class="form-control" value="@(this.Model.FinishedAt is not null ? string.Join('-', this.Model.FinishedAt!.ToString()!.Split('/').Reverse()) : string.Empty)" type="date" name="finishedAt">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-sm-4 col-lg-4 col-md-4">
                        <div class="form-group">
                            <label for="my-select">Pessoas Envolvidas</label>
                            <div class="users">
                                @foreach (UserViewModel user in this.ViewBag.Users) {
                                    <div class="user" id=@user.UserId involved=@(this.Model.InvolvedUsers.Any(u => u.UserId == user.UserId) ? "true" : "false")>
                                        <span>@user.MinorName</span>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-12 col-md-12">
                        <div class="form-group">
                            <label for="my-textarea">Descrição</label>
                            <textarea class="form-control" name="description" maxlength="800" rows="5">@(this.Model.Description ?? string.Empty)</textarea>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 col-md-12 d-flex align-items-center justify-content-center flex-column text-center">
                        <div class="form-group">
                            <label>Mídias incluídas</label>
                            <br>
                            <button type="button" class="btn btn-add-media">
                                <i class="mdi mdi-plus"></i>
                                Adicionar mídia
                            </button>
                            <input type="file" name="medias[]" class="d-none input-new-medias" multiple accept=".jpg,.jpeg,.png,.mp4">
                            <input type="file" class="d-none input-change-media" accept=".jpg,.jpeg,.png,.mp4">
                        </div>
                    </div>
                </div>
                <div class="medias row align-items-center">
                    @foreach (MediaDetailsViewModel media in this.Model.Medias) {
                        <div class="col-12 col-sm-12 col-lg-3 col-md-3 my-3">
                            <div class="card media" id=@media.MediaId>
                                <div class="card-body">
                                    @if (media.Extension == ".mp4") {
                                        <video class="d-block" style="width:100%" preload="metadata" controls src=@media.Path size=@media.Size></video>
                                    } else {
                                        <img class="d-block w-100 img-card" src=@media.Path size=@media.Size>
                                    }
                                    <div class="row my-1">
                                        <div class="col-12 col-lg-6">
                                            <button type="button" class="btn btn-change-media w-100 btn-warning my-1">
                                                <i class="mdi mdi-pencil"></i>
                                                Alterar
                                            </button>
                                        </div>
                                        <div class="col-12 col-lg-6">
                                            <button type="button" class="btn w-100 btn-remove-media btn-default-red my-1" id=@media.MediaId>
                                                <i class="mdi mdi-trash-can-outline"></i>
                                                Apagar
                                            </button>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Nome</label>
                                        <input maxlength="60" class="form-control" type="text" value=@media.Title>
                                    </div>
                                    <div class="form-group">
                                        <label>Descrição</label>
                                        <textarea maxlength="300" class="form-control" rows="3">@(media.Description ?? string.Empty)</textarea>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="row mt-3">
                    <div class="col-12 col-md-12">
                        <button class="btn btn-strong-red btn-save btn-block" type="button">Salvar alterações</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</main>

<script src="~/js/projectForm.js"></script>
<script>
    const project = {
        projectId: +$("input[name=projectId]").val(),
        title: $("input[name=title]").val().trim(),
        startedAt: $("input[name=startedAt]").val(),
        finishedAt: $("input[name=finishedAt]").val() || null,
        description: $("textarea[name=description]").val()?.trim() || null,
        areaId: +$("select[name=areaId]").val(),
        courseId: +$("select[name=courseId]").val(),
        involvedUsers: $(".user[involved=true]").toArray().map(e => +$(e).attr("id")),
        medias: $(".media").toArray().map(e => ({
            mediaId: +$(e).attr("id"),
            title: $(e).find("input").val().trim(),
            description: $(e).find("textarea").val()?.trim() || null,
            extension: $(e).find("img, video").attr("src").split(".").at(-1),
            path: $(e).find("img, video").attr("src")
        }))
    };

    $(document).ready(() => {

        $(".btn-save").click(async () => {
            formHasEmptyField([
                ...$(".medias").find("input"),
                $("input[name=title]")[0],
                $("input[name=startedAt]")[0],
                $("select[name=courseId]")[0],
                $("select[name=areaId]")[0]
            ]);

            project.title = $("input[name=title]").val().trim();
            project.startedAt = $("input[name=startedAt]").val().trim();
            project.finishedAt = $("input[name=finishedAt]").val().trim() || null;
            project.description = $("textarea[name=description]").val().trim() || null;
            project.areaId = +$("select[name=areaId]").val();
            project.courseId = +$("select[name=courseId]").val();

            if (project.involvedUsers.length == 0) {
                sweetAlert("warning", "Por favor, selecione pelo menos uma pessoa envolvido no projeto.");
                return;
            }

            if (project.involvedUsers.length == 0 || project.medias.length == 0) {
                sweetAlert("warning", "Por favor, anexe pelo menos uma mídia para o projeto.");
                return;
            }

            if (project.medias.length > 10) {
                sweetAlert("warning", "Por favor, anexe no máximo 10 mídias para o projeto.");
                return;
            }

            sweetAlertAwait("Salvando alterações...");
            const { status, body } = await restAPI.patch(`admin/projects/${project.projectId}`, project);
            toggleExitConfirmation(false);

            switch (status) {
                case 204:
                    sweetAlert("success", "Projeto salvo com sucesso!").then(({ value }) => value && location.reload());
                    break;
                case 400:
                    handleBadRequest(body);
                    break;
                case 403:
                    sweetAlert("warning", "Você não está envolvido e nem é o criador deste projeto!");
                    break;
                case 404:
                    sweetAlert("warning", "Esse projeto não existe mais!");
                    break;
                default:
                    sweetAlert("error", "Erro ao salvar alterações!");
                    break;
            }
        });

        $(".medias").on("click", ".btn-remove-media", function () {
            const mediaId = +$(this).attr("id");
            if (!isNaN(mediaId)) {
                for (let i = 0; i < project.medias.length; i++)
                    if (project.medias[i].mediaId == mediaId) {
                        project.medias.splice(i, 1);
                        break;
                    }
                setTimeout(() => $(`.media[id=${mediaId}]`).parent().remove(), 1000);
                $(`.media[id=${mediaId}]`).parent().hide(500);
            } else {
                const i = [...$(".media")].indexOf($(this).parents(".media")[0]);
                setTimeout(() => $(this).parents(".col-12").remove(), 1000);
                $(this).parents(".col-12").hide(500);
                project.medias.splice(i, 1);
            }
        });

        $(".input-new-medias").on("change", function () {
            const files = $(".input-new-medias")[0].files;

            for (let i = 0; i < files.length; i++) {
                const fileReader = new FileReader;
                const file = files[i];

                fileReader.onloadend = ({ target: { result } }) => {
                    if (project.medias.length == 10) {
                        sweetAlert("warning", "Limite de 10 mídias atingido.");
                        return;
                    }

                    if (fileIsValidWithAlertReturn(file)) {
                        const media = {
                            title: file.name.substr(0, file.name.lastIndexOf(".")) || file.name,
                            extension: file.type.split("/")[1],
                            description: null,
                            base64: result.split(",")[1]
                        };

                        $(".medias").append(`
                            <div class="col-12 col-sm-12 col-lg-3 col-md-3 my-3">
                                <div class="card media">
                                    <div class="card-body">
                                        ${media.extension == "mp4"
                                ? `<video src="${result}" style="max-width: 100%;" controls></video>`
                                : `<img src="${result}" class="d-block w-100">`
                            }
                                        <div class="row my-1">
                                            <div class="col-12 col-lg-6">
                                                <button type="button" class="btn btn-change-media w-100 btn-warning my-1">
                                                    <i class="mdi mdi-pencil"></i>
                                                    Alterar
                                                </button>
                                            </div>
                                            <div class="col-12 col-lg-6">
                                                <button type="button" class="btn w-100 btn-remove-media btn-default-red my-1">
                                                    <i class="mdi mdi-trash-can-outline"></i>
                                                    Apagar
                                                </button>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label>
                                                Nome
                                            </label>
                                            <input maxlength="60" class="form-control" type="text" value="${file.name.substr(0, file.name.lastIndexOf(".")) || file.name}">
                                        </div>
                                        <div class="form-group">
                                            <label>
                                                Descrição
                                            </label>
                                            <textarea maxlength="200" class="form-control" rows="5"></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `);
                        project.medias.push(media);
                    }
                }
                fileReader.readAsDataURL(file);
            }
            $(".input-new-medias").val(null);
        });
    });
</script>